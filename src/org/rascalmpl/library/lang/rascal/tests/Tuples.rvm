rvm("lang::rascal::tests::Tuples",[|std:///Tuple.rsc|],(),("lang::rascal::tests::Tuples_testsuite/lang::rascal::tests::Tuples_testsuite(list(value());)#0":FUNCTION("lang::rascal::tests::Tuples_testsuite/lang::rascal::tests::Tuples_testsuite(list(value());)#0",func(value(),[list(value())]),"",1,1,5,[CALLPRIM("testreport_open",0),POP(),LOADCON("lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value())]);)#0"),LOADCON(|rascal:///lang/rascal/tests/Tuples.rsc|(51,57,<5,0>,<5,57>)),LOADTYPE(tuple([tuple([parameter("A",value())])])),CALLPRIM("testreport_add",3),POP(),LOADCON("lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value()),parameter(\"B\",value())]);)#0"),LOADCON(|rascal:///lang/rascal/tests/Tuples.rsc|(109,67,<6,0>,<6,67>)),LOADTYPE(tuple([tuple([parameter("A",value()),parameter("B",value())])])),CALLPRIM("testreport_add",3),POP(),LOADCON("lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value()),parameter(\"B\",value()),parameter(\"C\",value())]);)#0"),LOADCON(|rascal:///lang/rascal/tests/Tuples.rsc|(177,77,<7,0>,<7,77>)),LOADTYPE(tuple([tuple([parameter("A",value()),parameter("B",value()),parameter("C",value())])])),CALLPRIM("testreport_add",3),POP(),LOADCON("lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value())]);)#0"),LOADCON(|rascal:///lang/rascal/tests/Tuples.rsc|(256,65,<9,0>,<9,65>)),LOADTYPE(tuple([tuple([parameter("A",value())])])),CALLPRIM("testreport_add",3),POP(),LOADCON("lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value()),parameter(\"B\",value())]);)#0"),LOADCON(|rascal:///lang/rascal/tests/Tuples.rsc|(322,76,<10,0>,<10,76>)),LOADTYPE(tuple([tuple([parameter("A",value()),parameter("B",value())])])),CALLPRIM("testreport_add",3),POP(),LOADCON("lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value()),parameter(\"B\",value()),parameter(\"C\",value())]);)#0"),LOADCON(|rascal:///lang/rascal/tests/Tuples.rsc|(399,87,<11,0>,<11,87>)),LOADTYPE(tuple([tuple([parameter("A",value()),parameter("B",value()),parameter("C",value())])])),CALLPRIM("testreport_add",3),POP(),CALLPRIM("testreport_close",0),RETURN1()],[]),"lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value()),parameter(\"B\",value())]);)#0":FUNCTION("lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value()),parameter(\"B\",value())]);)#0",func(bool(),[tuple([parameter("A",value()),parameter("B",value())])])[@isVarArgs=false],"",1,2,7,[JMP("L1"),LABEL("FAIL_LAB1"),JMP("ELSE_LAB1"),LABEL("L1"),LOADLOC(0),LOADTYPE(tuple([parameter("A",value()),parameter("B",value())])),CALLMUPRIM("check_arg_type",2),JMPFALSE("ELSE_LAB1"),LOADLOC(0),STORELOC(1),POP(),LOADLOC(1),LOADCON(0),CALLPRIM("tuple_subscript_int",2),LOADLOC(1),LOADCON(1),CALLPRIM("tuple_subscript_int",2),CALLPRIM("tuple_create",2),LOADLOC(1),CALLPRIM("equal",2),RETURN1(),JMP("CONTINUE_LAB1"),LABEL("ELSE_LAB1"),FAILRETURN(),LABEL("CONTINUE_LAB1")],[]),"lang::rascal::tests::Tuples/#lang::rascal::tests::Tuples_init(list(value());)#0":FUNCTION("lang::rascal::tests::Tuples/#lang::rascal::tests::Tuples_init(list(value());)#0",func(value(),[list(value())]),"",1,1,25,[RETURN1(),HALT()],[]),"lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value()),parameter(\"B\",value()),parameter(\"C\",value())]);)#0":FUNCTION("lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value()),parameter(\"B\",value()),parameter(\"C\",value())]);)#0",func(bool(),[tuple([parameter("A",value()),parameter("B",value()),parameter("C",value())])])[@isVarArgs=false],"",1,2,7,[JMP("L5"),LABEL("FAIL_LAB5"),JMP("ELSE_LAB5"),LABEL("L5"),LOADLOC(0),LOADTYPE(tuple([parameter("A",value()),parameter("B",value()),parameter("C",value())])),CALLMUPRIM("check_arg_type",2),JMPFALSE("ELSE_LAB5"),LOADLOC(0),STORELOC(1),POP(),LOADLOC(1),LOADCON(3),CALLPRIM("negative_int",1),CALLPRIM("tuple_subscript_int",2),LOADLOC(1),LOADCON(2),CALLPRIM("negative_int",1),CALLPRIM("tuple_subscript_int",2),LOADLOC(1),LOADCON(1),CALLPRIM("negative_int",1),CALLPRIM("tuple_subscript_int",2),CALLPRIM("tuple_create",3),LOADLOC(1),CALLPRIM("equal",2),RETURN1(),JMP("CONTINUE_LAB5"),LABEL("ELSE_LAB5"),FAILRETURN(),LABEL("CONTINUE_LAB5")],[]),"lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value())]);)#0":FUNCTION("lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value())]);)#0",func(bool(),[tuple([parameter("A",value())])])[@isVarArgs=false],"",1,2,7,[JMP("L3"),LABEL("FAIL_LAB3"),JMP("ELSE_LAB3"),LABEL("L3"),LOADLOC(0),LOADTYPE(tuple([parameter("A",value())])),CALLMUPRIM("check_arg_type",2),JMPFALSE("ELSE_LAB3"),LOADLOC(0),STORELOC(1),POP(),LOADLOC(1),LOADCON(1),CALLPRIM("negative_int",1),CALLPRIM("tuple_subscript_int",2),CALLPRIM("tuple_create",1),LOADLOC(1),CALLPRIM("equal",2),RETURN1(),JMP("CONTINUE_LAB3"),LABEL("ELSE_LAB3"),FAILRETURN(),LABEL("CONTINUE_LAB3")],[]),"lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value()),parameter(\"B\",value())]);)#0":FUNCTION("lang::rascal::tests::Tuples/subscriptionWrapped(tuple([parameter(\"A\",value()),parameter(\"B\",value())]);)#0",func(bool(),[tuple([parameter("A",value()),parameter("B",value())])])[@isVarArgs=false],"",1,2,7,[JMP("L4"),LABEL("FAIL_LAB4"),JMP("ELSE_LAB4"),LABEL("L4"),LOADLOC(0),LOADTYPE(tuple([parameter("A",value()),parameter("B",value())])),CALLMUPRIM("check_arg_type",2),JMPFALSE("ELSE_LAB4"),LOADLOC(0),STORELOC(1),POP(),LOADLOC(1),LOADCON(2),CALLPRIM("negative_int",1),CALLPRIM("tuple_subscript_int",2),LOADLOC(1),LOADCON(1),CALLPRIM("negative_int",1),CALLPRIM("tuple_subscript_int",2),CALLPRIM("tuple_create",2),LOADLOC(1),CALLPRIM("equal",2),RETURN1(),JMP("CONTINUE_LAB4"),LABEL("ELSE_LAB4"),FAILRETURN(),LABEL("CONTINUE_LAB4")],[]),"lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value()),parameter(\"B\",value()),parameter(\"C\",value())]);)#0":FUNCTION("lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value()),parameter(\"B\",value()),parameter(\"C\",value())]);)#0",func(bool(),[tuple([parameter("A",value()),parameter("B",value()),parameter("C",value())])])[@isVarArgs=false],"",1,2,7,[JMP("L2"),LABEL("FAIL_LAB2"),JMP("ELSE_LAB2"),LABEL("L2"),LOADLOC(0),LOADTYPE(tuple([parameter("A",value()),parameter("B",value()),parameter("C",value())])),CALLMUPRIM("check_arg_type",2),JMPFALSE("ELSE_LAB2"),LOADLOC(0),STORELOC(1),POP(),LOADLOC(1),LOADCON(0),CALLPRIM("tuple_subscript_int",2),LOADLOC(1),LOADCON(1),CALLPRIM("tuple_subscript_int",2),LOADLOC(1),LOADCON(2),CALLPRIM("tuple_subscript_int",2),CALLPRIM("tuple_create",3),LOADLOC(1),CALLPRIM("equal",2),RETURN1(),JMP("CONTINUE_LAB2"),LABEL("ELSE_LAB2"),FAILRETURN(),LABEL("CONTINUE_LAB2")],[]),"lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value())]);)#0":FUNCTION("lang::rascal::tests::Tuples/subscription(tuple([parameter(\"A\",value())]);)#0",func(bool(),[tuple([parameter("A",value())])])[@isVarArgs=false],"",1,2,7,[JMP("L0"),LABEL("FAIL_LAB0"),JMP("ELSE_LAB0"),LABEL("L0"),LOADLOC(0),LOADTYPE(tuple([parameter("A",value())])),CALLMUPRIM("check_arg_type",2),JMPFALSE("ELSE_LAB0"),LOADLOC(0),STORELOC(1),POP(),LOADLOC(1),LOADCON(0),CALLPRIM("tuple_subscript_int",2),CALLPRIM("tuple_create",1),LOADLOC(1),CALLPRIM("equal",2),RETURN1(),JMP("CONTINUE_LAB0"),LABEL("ELSE_LAB0"),FAILRETURN(),LABEL("CONTINUE_LAB0")],[])),[],(),[])